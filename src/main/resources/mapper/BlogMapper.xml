<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzw.dao.BlogMapper">
    <resultMap id="BaseResultMap" type="com.lzw.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="description" column="description"/>
        <result property="typeId" column="type_id"/>
        <result property="userId" column="user_id"/>
        <result property="tagIds" column="tag_ids"/>
        <association property="type" column="typeId" javaType="com.lzw.entity.Type">
            <id column="typeId" property="id"/>
            <result column="typeName" property="name"/>
        </association>
        <association property="user" column="userId" javaType="com.lzw.entity.User">
            <id property="id" column="userId"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
        <collection property="tags" ofType="com.lzw.entity.Tag">
            <id property="id" column="tagId"/>
            <result property="name" column="tagName"/>
        </collection>
    </resultMap>

    <select id="getBlogById" resultMap="BaseResultMap">
        select a.id, a.title, a.content, a.first_picture, a.flag, a.appreciation, a.share_statement, a.commentabled, a.published, a.recommend, a.description, a.type_id,a.tag_ids from t_blog a where a.id=#{id}
    </select>

    <insert id="saveBlog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog values (null,#{title},#{content},#{firstPicture},#{flag},#{views},#{appreciation},#{shareStatement},#{commentabled},#{published},#{recommend},#{createTime},#{updateTime},#{description},#{typeId},#{userId},#{tagIds})
    </insert>

    <select id="getAllBlog" resultMap="BaseResultMap">
        select a.id,a.title,a.recommend,a.published,a.update_time,b.id as typeId,b.name as typeName from t_blog a,t_type b where a.type_id=b.id
    </select>

    <update id="update">
        update t_blog set  title=#{title},content=#{content},first_picture=#{firstPicture},flag=#{flag},appreciation=#{appreciation},share_statement=#{shareStatement},commentabled=#{commentabled},commentabled=#{commentabled},published=#{published},recommend=#{recommend},description=#{description},type_id=#{typeId},tag_ids=#{tagIds},update_time=#{updateTime} where id=#{id}
    </update>

    <delete id="delete">
        delete from t_blog where id=#{id}
    </delete>

    <select id="searchBlog" resultMap="BaseResultMap">
        select a.id,a.title,a.recommend,a.published,a.update_time,b.id as typeId,b.name as typeName from t_blog a,t_type b where a.type_id=b.id
        <if test="title != null and title != ''">
            and a.title like CONCAT('%',#{title},'%')
        </if>
        <if test="typeId != null">
            and a.type_id=#{typeId}
        </if>
        <if test="recommend!=null">
            and a.recommend=#{recommend}
        </if>
    </select>

    <select id="getBlogByTypeId" resultMap="BaseResultMap">
        select b.id,b.title,b.first_picture,b.description,b.views,b.update_time,t.name as typeName,u.avatar,u.nickname from t_blog b,t_type t,t_user u
        where b.type_id=t.id and b.user_id=u.id and b.type_id=#{typeId} and b.published=1
    </select>

    <select id="getBlogByTagId" resultMap="BaseResultMap">
         select b.id,b.title,b.first_picture,b.description,b.views,b.update_time,t.name as typeName,u.avatar,u.nickname from t_blog b,t_type t,t_user u
        where b.type_id=t.id and b.user_id=u.id and FIND_IN_SET(#{tagId}, b.tag_ids) and b.published=1
    </select>

    <select id="getIndexBlog" resultMap="BaseResultMap">
        select b.id,b.title,b.first_picture,b.description,b.views,b.update_time,t.name as typeName,u.avatar,u.nickname from t_blog b,t_type t,t_user u
        where b.type_id=t.id and b.user_id=u.id and b.published=1 order by b.update_time desc
    </select>

    <select id="getRecommendBlog" resultMap="BaseResultMap">
         select id,title from t_blog where recommend=1 and published=1 order by update_time desc
    </select>

    <select id="searchIndexBlog" resultMap="BaseResultMap">
        SELECT b.id,b.title,b.first_picture,b.description,b.views,b.update_time,t.name AS typeName,u.avatar,u.nickname FROM t_blog b,t_type t,t_user u
        WHERE b.type_id=t.id AND b.user_id=u.id AND b.published=1 AND (b.title LIKE CONCAT('%',#{query},'%') OR b.content LIKE CONCAT('%',#{query},'%'))
        ORDER BY b.update_time DESC
    </select>

    <select id="getDetailedBlog" resultMap="BaseResultMap">
        select b.id,b.title,b.first_picture,b.flag,b.content,b.views,b.update_time,b.commentabled,b.appreciation,b.share_statement,b.tag_ids,
            u.avatar,u.nickname
        from t_blog b,t_user u
        where b.user_id=u.id and b.published=1 and b.id=#{id}
    </select>

    <update id="updateView">
        update t_blog set views=views+1 where id=#{id}
    </update>

    <select id="getGroupYears" resultType="java.lang.String">
        SELECT DATE_FORMAT(update_time,"%Y-%m") FROM t_blog ORDER BY update_time asc
    </select>

    <select id="getBlogByYears" resultMap="BaseResultMap">
         select id,title,update_time,flag from t_blog where DATE_FORMAT(update_time,'%Y-%m')=#{year} and published=1
    </select>
</mapper>